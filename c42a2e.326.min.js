(window.webpackJsonp=window.webpackJsonp||[]).push([[326],{1127:function(e,a,t){"use strict";t.r(a);var n=t(0),l=t.n(n),c=t(1169);a.default=function(e){const[a,t]=Object(n.useState)(!1),[r,m]=Object(n.useState)(!1);localStorage.getItem("arco-lang");return l.a.createElement("span",{style:e.style,className:"markdown-body"},l.a.createElement(c.a,null,l.a.createElement("title",null,"目录结构 | ArcoDesign"),l.a.createElement("meta",{name:"description",content:"项目文件的组织结构。"}),l.a.createElement("meta",{property:"og:title",content:"目录结构 | ArcoDesign"}),l.a.createElement("meta",{property:"og:description",content:"项目文件的组织结构。"})),l.a.createElement("div",{className:"ac-nav-intro"},l.a.createElement("p",null,"Arco Pro"),l.a.createElement("h1",{id:"目录结构"},"目录结构"),l.a.createElement("p",null,"项目文件的组织结构。")),l.a.createElement("h2",{id:"目录"},"目录"),l.a.createElement("p",null,"我们根据资源的类型来组织文件，尽量让每个文件夹或者文件的功能相对独立，减少耦合，当以下结构不够使用的时候，建议调整的时候尽量不脱离这个原则。"),l.a.createElement("h2",{id:"以-create-react-app-架构为例。"},"以 ",l.a.createElement("code",null,"create-react-app")," 架构为例。"),l.a.createElement("pre",{className:"code_block"},l.a.createElement("code",{className:"language-bash"},"├── README.md",l.a.createElement("br",null),"├── config-overrides.js",l.a.createElement("br",null),"├── package-lock.json",l.a.createElement("br",null),"├── package.json",l.a.createElement("br",null),"├── public",l.a.createElement("br",null),"│   └── index.html                  ",l.a.createElement("span",{className:"token comment"},"# cra打包模版文件"),l.a.createElement("br",null),"├── react-app-env.d.ts",l.a.createElement("br",null),"├── src",l.a.createElement("br",null),"│   ├── assets                      ",l.a.createElement("span",{className:"token comment"},"# 静态资源"),l.a.createElement("br",null),"│   ├── components                  ",l.a.createElement("span",{className:"token comment"},"# 通用业务组件"),l.a.createElement("br",null),"│   ├── context.tsx                 ",l.a.createElement("span",{className:"token comment"},"# 全局配置"),l.a.createElement("br",null),"│   ├── declaration.d.ts",l.a.createElement("br",null),"│   ├── index.tsx                   ",l.a.createElement("span",{className:"token comment"},"# 入口文件"),l.a.createElement("br",null),"│   ├── layout.tsx                  ",l.a.createElement("span",{className:"token comment"},"# 布局"),l.a.createElement("br",null),"│   ├── locale                      ",l.a.createElement("span",{className:"token comment"},"# 国际化语言包"),l.a.createElement("br",null),"│   ├── mock                        ",l.a.createElement("span",{className:"token comment"},"# 公共组件模拟数据"),l.a.createElement("br",null),"│   ├── pages                       ",l.a.createElement("span",{className:"token comment"},"# 页面模版"),l.a.createElement("br",null),"│   ├── react-app-env.d.ts",l.a.createElement("br",null),"│   ├── routes.ts                   ",l.a.createElement("span",{className:"token comment"},"# 路由配置"),l.a.createElement("br",null),"│   ├── settings.json               ",l.a.createElement("span",{className:"token comment"},"# 配置文件"),l.a.createElement("br",null),"│   ├── store                       ",l.a.createElement("span",{className:"token comment"},"# redux状态管理"),l.a.createElement("br",null),"│   ├── style                       ",l.a.createElement("span",{className:"token comment"},"# 全局样式"),l.a.createElement("br",null),"│   └── utils                       ",l.a.createElement("span",{className:"token comment"},"# 工具库"),l.a.createElement("br",null),"├── tsconfig-base.json",l.a.createElement("br",null),"├── tsconfig.json",l.a.createElement("br",null),"└── yarn.lock")))}}}]);