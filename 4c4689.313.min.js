(window.webpackJsonp=window.webpackJsonp||[]).push([[313],{1146:function(e,t,a){"use strict";a.r(t);var n=a(0),l=a.n(n),s=a(1169);t.default=function(e){const[t,a]=Object(n.useState)(!1),[c,r]=Object(n.useState)(!1);localStorage.getItem("arco-lang");return l.a.createElement("span",{style:e.style,className:"markdown-body"},l.a.createElement(s.a,null,l.a.createElement("title",null,"Test | ArcoDesign"),l.a.createElement("meta",{name:"description",content:"Understand the unit testing of material items."}),l.a.createElement("meta",{property:"og:title",content:"Test | ArcoDesign"}),l.a.createElement("meta",{property:"og:description",content:"Understand the unit testing of material items."})),l.a.createElement("div",{className:"ac-nav-intro"},l.a.createElement("p",null,"Material Market"),l.a.createElement("h1",{id:"test"},"Test"),l.a.createElement("p",null,"Understand the unit testing of material items.")),l.a.createElement("p",null,l.a.createElement("em",null,"Auto translate by google.")),l.a.createElement("p",null,l.a.createElement("em",null,"This article is based on the project created by Arco's official material template")),l.a.createElement("p",null,"arco-scripts has built-in Jest testing tools, you can use Jest to write your unit tests in your project. Take the component material project as an example, its ",l.a.createElement("code",null,"src/__test__")," directory structure is as follows:"),l.a.createElement("pre",null,l.a.createElement("code",null,"src",l.a.createElement("span",{className:"token operator"},"/"),"__test__",l.a.createElement("br",null),"├── __snapshots__",l.a.createElement("br",null),"│ └── demo",l.a.createElement("span",{className:"token punctuation"},"."),"test",l.a.createElement("span",{className:"token punctuation"},"."),"ts",l.a.createElement("span",{className:"token punctuation"},"."),"snap",l.a.createElement("br",null),"├── demo",l.a.createElement("span",{className:"token punctuation"},"."),"test",l.a.createElement("span",{className:"token punctuation"},"."),"ts",l.a.createElement("br",null),"└── index",l.a.createElement("span",{className:"token punctuation"},"."),"test",l.a.createElement("span",{className:"token punctuation"},"."),"tsx")),l.a.createElement("p",null,"You can write your unit test in the ",l.a.createElement("code",null,"__test__")," directory, and then execute the following command to test:"),l.a.createElement("pre",{className:"code_block"},l.a.createElement("code",{className:"language-bash"},l.a.createElement("span",{className:"token comment"},"# jest --env=jsdom"),l.a.createElement("br",null),"arco-scripts test:client",l.a.createElement("br",null),l.a.createElement("br",null),l.a.createElement("span",{className:"token comment"},"# jest --env=node"),l.a.createElement("br",null),"arco-scripts test:node",l.a.createElement("br",null),l.a.createElement("br",null),l.a.createElement("span",{className:"token comment"},"# This command is a combination of test:client and test:node"),l.a.createElement("br",null),"arco-scripts ",l.a.createElement("span",{className:"token builtin class-name"},"test"))),l.a.createElement("p",null,"If you need to use Jest CLI parameters, you can pass them directly after the test/test:client/test:node command. Arco will pass all these parameters to Jest transparently."),l.a.createElement("pre",{className:"code_block"},l.a.createElement("code",{className:"language-bash"},"arco-scripts ",l.a.createElement("span",{className:"token builtin class-name"},"test")," --bail --updateSnapshot --passWithNoTests",l.a.createElement("br",null),l.a.createElement("br",null),"arco-scripts test:client --updateSnapshot --coverage",l.a.createElement("br",null),l.a.createElement("br",null),"arco-scripts test:node --bail")),l.a.createElement("p",null,"For custom Jest test configuration, please refer to: Create Project-Custom Configuration. You can also refer to the following documents:"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("a",{href:"https://jestjs.io/docs/en/configuration"},"Jest Configuration File")),l.a.createElement("li",null,l.a.createElement("a",{href:"https://jestjs.io/docs/en/cli"},"Jest CLI options"))))}}}]);