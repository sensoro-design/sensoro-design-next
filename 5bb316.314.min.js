(window.webpackJsonp=window.webpackJsonp||[]).push([[314],{1147:function(e,t,a){"use strict";a.r(t);var n=a(0),l=a.n(n),c=a(1169);t.default=function(e){const[t,a]=Object(n.useState)(!1),[s,r]=Object(n.useState)(!1);localStorage.getItem("arco-lang");return l.a.createElement("span",{style:e.style,className:"markdown-body"},l.a.createElement(c.a,null,l.a.createElement("title",null,"单元测试 | ArcoDesign"),l.a.createElement("meta",{name:"description",content:"了解物料项目的单元测试。"}),l.a.createElement("meta",{property:"og:title",content:"单元测试 | ArcoDesign"}),l.a.createElement("meta",{property:"og:description",content:"了解物料项目的单元测试。"})),l.a.createElement("div",{className:"ac-nav-intro"},l.a.createElement("p",null,"物料平台"),l.a.createElement("h1",{id:"单元测试"},"单元测试"),l.a.createElement("p",null,"了解物料项目的单元测试。")),l.a.createElement("p",null,l.a.createElement("em",null,"本文基于 Arco 官方物料模板所创建的项目进行说明")),l.a.createElement("p",null,"arco-scripts 内置了 Jest 测试工具，你可以在项目中使用 Jest 编写你的单元测试。以组件物料项目为例，其 ",l.a.createElement("code",null,"src/__test__")," 目录结构如下："),l.a.createElement("pre",null,l.a.createElement("code",null,"src",l.a.createElement("span",{className:"token operator"},"/"),"__test__",l.a.createElement("br",null),"├── __snapshots__",l.a.createElement("br",null),"│   └── demo",l.a.createElement("span",{className:"token punctuation"},"."),"test",l.a.createElement("span",{className:"token punctuation"},"."),"ts",l.a.createElement("span",{className:"token punctuation"},"."),"snap",l.a.createElement("br",null),"├── demo",l.a.createElement("span",{className:"token punctuation"},"."),"test",l.a.createElement("span",{className:"token punctuation"},"."),"ts",l.a.createElement("br",null),"└── index",l.a.createElement("span",{className:"token punctuation"},"."),"test",l.a.createElement("span",{className:"token punctuation"},"."),"tsx")),l.a.createElement("p",null,"你可以在",l.a.createElement("code",null,"__test__"),"目录中编写你的单元测试，然后执行以下命令进行测试："),l.a.createElement("pre",{className:"code_block"},l.a.createElement("code",{className:"language-bash"},l.a.createElement("span",{className:"token comment"},"# jest --env=jsdom"),l.a.createElement("br",null),"arco-scripts test:client",l.a.createElement("br",null),l.a.createElement("br",null),l.a.createElement("span",{className:"token comment"},"# jest --env=node"),l.a.createElement("br",null),"arco-scripts test:node",l.a.createElement("br",null),l.a.createElement("br",null),l.a.createElement("span",{className:"token comment"},"# 此命令为 test:client 与 test:node 的合并"),l.a.createElement("br",null),"arco-scripts ",l.a.createElement("span",{className:"token builtin class-name"},"test"))),l.a.createElement("p",null,"如果你需要使用 Jest CLI 参数，可在 test/test:client/test:node 命令后直接传入，arco 会将这些参数全部透传给 Jest。"),l.a.createElement("pre",{className:"code_block"},l.a.createElement("code",{className:"language-bash"},"arco-scripts ",l.a.createElement("span",{className:"token builtin class-name"},"test")," --bail --updateSnapshot --passWithNoTests",l.a.createElement("br",null),l.a.createElement("br",null),"arco-scripts test:client --updateSnapshot --coverage",l.a.createElement("br",null),l.a.createElement("br",null),"arco-scripts test:node --bail")),l.a.createElement("p",null,"关于自定义 Jest 测试配置，请参考：创建项目 - 自定义配置，还可进一步参考以下文档："),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("a",{href:"https://jestjs.io/docs/en/configuration"},"Jest 配置文件")),l.a.createElement("li",null,l.a.createElement("a",{href:"https://jestjs.io/docs/en/cli"},"Jest CLI 选项"))))}}}]);